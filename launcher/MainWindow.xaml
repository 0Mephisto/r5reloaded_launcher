<Window x:Class="launcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:launcher" xmlns:local1="clr-namespace:launcher.Global"
        mc:Ignorable="d"
        Title="R5Reloaded Launcher" MinHeight="768" Height="768" MinWidth="1340" Width="1340" WindowStyle="None" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Icon="launcher_x64.ico" Background="Transparent" Closing="Window_Closing" ResizeMode="CanResize" SizeChanged="Window_SizeChanged" AllowsTransparency="True" StateChanged="Window_StateChanged" LocationChanged="Window_LocationChanged">

    <Window.RenderTransform>
        <ScaleTransform x:Name="WindowScale" ScaleX="1.0" ScaleY="1.0" />
    </Window.RenderTransform>

    <Window.RenderTransformOrigin>
        <Point X="0.5" Y="0.5" />
    </Window.RenderTransformOrigin>

    <WindowChrome.WindowChrome>
        <WindowChrome
        CaptionHeight="0"
        ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Window.Clip>
        <RectangleGeometry x:Name="WindowClip" Rect="0,0,1341,769" RadiusX="10" RadiusY="10" />
    </Window.Clip>

    <Window.Resources>
        <Style x:Key="RoundedThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="6" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalScrollBarStyle" TargetType="ScrollBar">
            <!-- Set properties specifically for a horizontal bar -->
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Background" Value="{DynamicResource ThemeSecondaryAlt}" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeSecondaryAlt}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid>
                            <!-- Define three columns for a horizontal scrollbar:
                         [Left Button] [Track/Thumb] [Right Button] -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="{DynamicResource ThemeSecondary}" CornerRadius="6">
                                <Grid>
                                    <!-- Define two columns for left and right arrows -->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Left Arrow -->
                                    <Path Grid.Column="0"
                              Data="M10,0 L0,5 L10,10"
                              Fill="White"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Width="10"
                              Height="10" Margin="5,0,0,0" />

                                    <!-- Right Arrow -->
                                    <Path Grid.Column="1"
                              Data="M0,0 L10,5 L0,10"
                              Fill="White"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Width="10"
                              Height="10" Margin="0,0,5,0" />
                                </Grid>
                            </Border>

                            <!-- Track with Thumb and PageLeft/PageRight areas -->
                            <Track
                        x:Name="PART_Track"
                        Grid.Column="0"
                        Orientation="Horizontal">

                                <Track.Thumb>
                                    <!-- The draggable Thumb -->
                                    <Thumb
                                        Style="{StaticResource RoundedThumbStyle}"
                                Background="{DynamicResource ThemeSecondaryAlt}"
                                BorderBrush="{DynamicResource ThemeSecondaryAlt}"
                                BorderThickness="1" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style that applies to all ScrollBars by default (optional) -->
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource HorizontalScrollBarStyle}" />

        <Style x:Key="CustomContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="Background" Value="#292A2D" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="#FF4E4E4E"
                        BorderThickness="1"
                        CornerRadius="8"
                        SnapsToDevicePixels="True">
                            <ScrollViewer
                            Margin="4"
                            CanContentScroll="True"
                            VerticalScrollBarVisibility="Hidden"
                            HorizontalScrollBarVisibility="Hidden">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Custom MenuItem Style (Unchanged) -->
        <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                            ContentSource="Header"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#80FFFFFF" />
                                <!-- 50% Transparent White -->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Icon" Value="{x:Null}" />
        </Style>

        <!-- Optional: Custom Separator Style -->
        <Style x:Key="CustomSeparatorStyle" TargetType="Separator">
            <!-- Set the height (thickness) of the separator line -->
            <Setter Property="Height" Value="1" />
            <!-- Remove left and right margins to eliminate gaps -->
            <Setter Property="Margin" Value="4,4,4,4" />
            <!-- Set the background color of the separator line -->
            <Setter Property="Background" Value="#80FFFFFF" />
            <!-- Ensure the separator stretches horizontally -->
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <!-- Define the ControlTemplate to render the separator line -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define Your Custom ContextMenu -->
        <ContextMenu x:Key="tbiContextMenu" Style="{StaticResource CustomContextMenuStyle}">
            <MenuItem x:Name="VersionContext"
                  Header="R5RLauncher "
                  IsEnabled="False"
                  IsCheckable="False"
                  Style="{StaticResource CustomMenuItemStyle}" FontFamily="Bahnschrift Light" />
            <Separator Style="{StaticResource CustomSeparatorStyle}" />
            <MenuItem Header="Visit Website"
                  Click="VisitWebsite_Click"
                  IsCheckable="False"
                  Style="{StaticResource CustomMenuItemStyle}" FontFamily="Bahnschrift Light" />
            <MenuItem Header="Join The Discord"
                  Click="JoinDiscord_Click"
                  IsCheckable="False"
                  Style="{StaticResource CustomMenuItemStyle}" FontFamily="Bahnschrift Light" />
            <Separator Style="{StaticResource CustomSeparatorStyle}" />
            <MenuItem Header="Quit"
                  Click="Exit_Click"
                  IsCheckable="False"
                  Style="{StaticResource CustomMenuItemStyle}" FontFamily="Bahnschrift Light" />
        </ContextMenu>

        <ControlTemplate x:Key="ProgressBarPath" TargetType="ProgressBar">
            <Viewbox Stretch="Fill">
                <Grid HorizontalAlignment="Left" Margin="-5 0">
                    <Path Stretch="None" x:Name="PART_Track" Fill="{DynamicResource ThemeSecondary}" RenderTransformOrigin="0,0.5" StrokeMiterLimit="1" Data="M 0,0 l 150,0 10,10 -150,0 z">
                        <Path.RenderTransform>
                            <SkewTransform AngleX="-45" />
                        </Path.RenderTransform>
                    </Path>
                    <Path Stretch="None" x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{DynamicResource ThemeSecondaryAltText}" RenderTransformOrigin="0,0.5" StrokeMiterLimit="1" Data="M 0,0 l 150,0 10,10 -150,0 z">
                        <Path.RenderTransform>
                            <SkewTransform AngleX="-45" />
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Viewbox>
        </ControlTemplate>

        <!-- Settings Button Style -->
        <Style x:Key="SettingsButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="{DynamicResource ThemeMainButtonsBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorder}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="SettingsButtonBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <Grid>
                                <Image Source="assets/icons8-settings-100.png" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SettingsButtonBorder" Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383" />
        <Style x:Key="ToggleButtonCombo" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeMainButtonsBackground}" BorderThickness="2" CornerRadius="4" BorderBrush="{DynamicResource ThemeMainButtonsBorder}">
                                <DockPanel LastChildFill="True">
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="5,0,0,0"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                    <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="249" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="210,0,0,0">
                                        <Path Data="M 0 0 L 10 10 L 20 0 Z"
                                      Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </ToggleButton>
                                </DockPanel>
                            </Border>

                            <Popup Name="PART_Popup"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=PART_Popup}"
                           AllowsTransparency="True"
                           PopupAnimation="Fade"
                           VerticalOffset="58">
                                <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="300">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025" />
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC" />
        <Style x:Key="installProgress" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="PART_Track" />
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3" />
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="3" RadiusY="3">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="StatusBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorDisabled}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorDisabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NewsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemeSecondaryAltText}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383" />
        <Style x:Key="PlatButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBackground}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBackground}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeSecondary}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeSecondaryAlt}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="UpdateButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,2,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" />
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="CLICK TO UPDATE" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Bahnschrift Light" FontSize="12" Margin="0,0,0,3" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA" />
        <Style x:Key="ComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="4,1" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" Padding="10" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeSecondaryAltText}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Border BorderBrush="{DynamicResource ThemePrimary}" BorderThickness="3" CornerRadius="5">
            <Grid x:Name="MainUI" Opacity="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="58" />
                    <RowDefinition Height="12*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="1">
                    <MediaElement x:Name="Background_Video" Grid.Row="0" Source="assets/launcher_bg_autum.mp4" LoadedBehavior="Play" UnloadedBehavior="Manual" IsMuted="True" MediaEnded="mediaElement_MediaEnded" Volume="50" HorizontalAlignment="Center" Stretch="UniformToFill" Margin="0,-1,0,0" />
                    <Image x:Name="Background_Image" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-1,0,0" Source="/assets/launcher_bg.jpg" Visibility="Hidden" />
                    <Rectangle Grid.Row="0" Margin="0,0,0,0" Fill="{DynamicResource ThemeSecondary}">
                        <Rectangle.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#00FFFFFF" Offset="0.0" />
                                <GradientStop Color="#FFFFFFFF" Offset="0.9" />
                            </LinearGradientBrush>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="260*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="460" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100*" />
                                <ColumnDefinition Width="60*" />
                                <ColumnDefinition Width="100*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="1" Source="assets/logo-main-white.png" VerticalAlignment="Center" HorizontalAlignment="Center" MaxHeight="220" />
                        </Grid>
                        <Grid Grid.Row="2" Margin="0,6,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70" />
                                <ColumnDefinition Width="400" />
                                <ColumnDefinition Width="136*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="90" />
                                    <RowDefinition Height="261" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="Unleash the Full            Potential of Apex Legends" FontSize="25.5" Foreground="{DynamicResource ThemePrimaryText}" FontFamily="Bahnschrift SemiBold" Margin="25,16,70,16" />
                                <Grid Grid.Row="1" Margin="25,0,25,0">
                                    <TextBlock TextWrapping="Wrap" Text="Game Environment" FontSize="14" Foreground="{DynamicResource ThemeSecondaryText}" FontFamily="Bahnschrift Light" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-2,0,0" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,23,0,0" Width="298" VerticalAlignment="Top">
                                        <ComboBox ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" x:Name="Branch_Combobox" Width="243" Height="50" SelectionChanged="cmbBranch_SelectionChanged" ShouldPreserveUserEnteredPrefix="True" Cursor="Hand">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding title}" Foreground="{DynamicResource ThemePrimaryText}" FontFamily="Bahnschrift SemiLight" FontSize="16" />
                                                        <TextBlock Text="{Binding subtext}" Foreground="{DynamicResource ThemeSecondaryText}" FontFamily="Bahnschrift Light" FontSize="14" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button x:Name="GameSettings_Button" Style="{StaticResource SettingsButtonStyle}" Margin="5,0,0,0" Width="50" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" Click="SettingsButton_Click" Cursor="Hand" />
                                        <Popup x:Name="GameSettings_Popup" PlacementTarget="{Binding ElementName=GameSettings_Button}" Placement="Bottom" StaysOpen="False" VerticalOffset="8" HorizontalOffset="-120" AllowsTransparency="True" PopupAnimation="Fade" Opened="GameSettings_Popup_Opened" Closed="GameSettings_Popup_Closed">
                                            <local:SettingsPopup x:Name="GameSettings_Control" />
                                        </Popup>
                                    </StackPanel>
                                    <Button Style="{DynamicResource PlatButtonStyle}" x:Name="Play_Button" Content="PLAY" FontSize="24" Background="{DynamicResource ThemeMainButtonsBackground}" Foreground="{DynamicResource ThemeSecondaryAltText}" BorderBrush="{DynamicResource ThemeMainButtonsBorder}" Click="btnStart_Click" Margin="0,82,0,114" RenderTransformOrigin="0.044,0.488" FontFamily="Bahnschrift SemiBold" HorizontalAlignment="Left" Width="298" Height="60" Cursor="Hand" />
                                    <ProgressBar Style="{DynamicResource installProgress}" x:Name="ProgressBar" Height="12" Width="298" RenderTransformOrigin="0.5,0.5" Foreground="{DynamicResource ThemeSecondaryAltText}" Background="{DynamicResource ThemeSecondary}" BorderBrush="{DynamicResource ThemeSecondary}" Margin="0,176,52,73">
                                        <ProgressBar.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ProgressBar.RenderTransform>
                                    </ProgressBar>
                                    <TextBlock x:Name="Status_Label" FontSize="12" Foreground="{DynamicResource ThemePrimaryText}" FontFamily="Bahnschrift Light" VerticalAlignment="Top" Margin="0,162,0,0" HorizontalAlignment="Left" FontWeight="Bold" Width="195" Text="" />
                                    <TextBlock x:Name="Files_Label" FontSize="12" Foreground="{DynamicResource ThemePrimaryText}" FontFamily="Bahnschrift Light" TextAlignment="Right" VerticalAlignment="Top" Margin="0,162,52,0" HorizontalAlignment="Right" FontWeight="Bold" Width="98" Text="10000 files left" />
                                    <TextBlock x:Name="Speed_Label" FontSize="12" Foreground="{DynamicResource ThemePrimaryText}" FontFamily="Bahnschrift Light" TextAlignment="Right" VerticalAlignment="Top" Margin="0,188,52,0" HorizontalAlignment="Right" FontWeight="Bold" Width="194" Text="" />
                                    <TextBlock x:Name="ReadMore_Label" TextWrapping="Wrap" FontSize="14" Foreground="{DynamicResource ThemeSecondaryText}" FontFamily="Bahnschrift Light" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,157,0,0" Height="44" Width="298" />
                                    <Button Style="{DynamicResource UpdateButtonStyle}" x:Name="Update_Button" Content="UPDATE AVAILABLE" FontSize="18" Background="{DynamicResource ThemeUpdateButtonBackground}" Foreground="{DynamicResource ThemePrimaryText}" BorderBrush="{DynamicResource ThemeUpdateButtonBackground}" Click="btnUpdate_Click" Margin="0,157,0,60" RenderTransformOrigin="0.044,0.488" FontFamily="Bahnschrift SemiBold" HorizontalAlignment="Left" Width="298" Cursor="Hand" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="2" x:Name="NewsContainer">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="80" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="430" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="Community_Button" Style="{DynamicResource NewsBtnStyle}" Height="30" Content="Community" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="0,10,18,10" Foreground="{DynamicResource ThemePrimaryText}" Click="NewsButton_Click" Cursor="Hand" />
                                        <Button x:Name="NewLegends_Button" Style="{DynamicResource NewsBtnStyle}" Height="30" Content="New Legends" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="0,10,18,10" Foreground="{DynamicResource ThemePrimaryText}" Click="NewsButton_Click" Cursor="Hand" />
                                        <Button x:Name="Comms_Button" Style="{DynamicResource NewsBtnStyle}" Height="30" Content="Comms" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="0,10,18,10" Foreground="{DynamicResource ThemePrimaryText}" Click="NewsButton_Click" Cursor="Hand" />
                                        <Button x:Name="PatchNotes_Button" Style="{DynamicResource NewsBtnStyle}" Height="30" Content="Patch Notes" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="0,10,18,10" Foreground="{DynamicResource ThemePrimaryText}" Click="NewsButton_Click" Cursor="Hand" />
                                    </StackPanel>
                                    <Rectangle x:Name="NewsRect" Fill="{DynamicResource ThemePrimaryText}" Width="101" HorizontalAlignment="Center"  IsHitTestVisible="False" Margin="0,51,0,13" RenderTransformOrigin="0.5,0.5" Height="3">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform x:Name="News_Rect_Translate" X="-167.4" Y="0" />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <ScrollViewer x:Name="NewsScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" ScrollChanged="ScrollViewer_ScrollChanged" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                        <StackPanel x:Name="NewsPanel" Orientation="Horizontal">
                                        </StackPanel>
                                    </ScrollViewer>
                                    <Rectangle x:Name="LeftNewsRect" Fill="{DynamicResource ThemeSecondaryAltText}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="2" Height="360" Margin="-2,-25,0,0">
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#00FFFFFF" Offset="0.0" />
                                                <GradientStop Color="#FFFFFFFF" Offset="0.25" />
                                                <GradientStop Color="#FFFFFFFF" Offset="0.75" />
                                                <GradientStop Color="#00FFFFFF" Offset="1.0" />
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="3" Margin="0,6,0,0">
                            <TextBlock x:Name="Version_Label" Text="" Foreground="{DynamicResource ThemeSecondaryText}" FontFamily="Bahnschrift Light" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Margin="8,0,0,0" />
                        </Grid>
                    </Grid>
                </Grid>

                <local:SettingsControl x:Name="Settings_Control" Grid.Row="1" Visibility="Hidden" Margin="0,-2,0,0" />
                <local:AdvancedControl x:Name="Advanced_Control" Grid.Row="1" Visibility="Hidden" Margin="0,-2,0,0" />

                <Rectangle x:Name="Transition_Rect" Fill="{DynamicResource ThemeSecondary}" Width="2340" Height="704" VerticalAlignment="Bottom" Grid.RowSpan="2" Margin="-10,0,-1000,0">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform x:Name="Transition_Rect_Translate" X="-2400" Y="0" />
                            <SkewTransform AngleX="-30" AngleY="0" />
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>

                <Rectangle x:Name="DragBarDropShadow" Grid.Row="1" Height="10" VerticalAlignment="Top" Margin="0,-2,0,0" Visibility="Hidden">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#00000000" />
                            <GradientStop Color="#33000000" Offset="0.9" />
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>

                <Grid Grid.Row="0">
                    <Rectangle Fill="{DynamicResource ThemePrimary}" MouseLeftButtonDown="DragBar_MouseLeftButtonDown" Height="58.6153846153845" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="101" />
                            <ColumnDefinition Width="786*" />
                            <ColumnDefinition Width="206" />
                            <ColumnDefinition Width="241" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" HorizontalAlignment="Left">
                            <Button x:Name="Menu_Button" Style="{DynamicResource StatusBtnStyle}" Background="Transparent" Width="92" Height="50" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="Transparent" Foreground="{DynamicResource ThemePrimaryText}" Click="SubMenuBtn_Click" Cursor="Hand" Margin="5,0,0,0">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Background="Transparent">
                                    <Image Source="/assets/logo-50.png" Width="55" Height="55" VerticalAlignment="Center" />
                                    <TextBlock Text="▼" FontSize="16" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Popup x:Name="Menu_Popup" PlacementTarget="{Binding ElementName=Menu_Button}" Placement="Bottom" VerticalOffset="10" HorizontalOffset="0" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False" Opened="MenuPopup_Loaded" Closed="MenuPopup_Unloaded">
                                <local:MenuPopup x:Name="Menu_Control" />
                            </Popup>
                        </Grid>
                        <Grid Grid.Column="1" />
                        <Grid Grid.Column="2" HorizontalAlignment="Right">
                            <Button Style="{DynamicResource StatusBtnStyle}" x:Name="Status_Button" Content="    R5R Status" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="32,10,18,10" Foreground="{DynamicResource ThemeSecondaryAltText}" Click="StatusBtn_Click" Cursor="Hand" />
                            <Image Source="/assets/icons8-info-96.png" Margin="45,19,131,21" IsHitTestVisible="False" />
                            <Rectangle Fill="#3F54ADF7" Width="2" HorizontalAlignment="Right"  IsHitTestVisible="False" Margin="0,10,7,10" />
                            <Popup x:Name="Status_Popup" PlacementTarget="{Binding ElementName=Status_Button}" Placement="Left" VerticalOffset="55" HorizontalOffset="155" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False" Opened="StatusPopup_Loaded" Closed="StatusPopup_Unloaded">
                                <local:StatusPopup x:Name="Status_Control" />
                            </Popup>
                        </Grid>
                        <Grid Grid.Column="3" Margin="3,0,0,0" HorizontalAlignment="Right">
                            <Button Style="{DynamicResource StatusBtnStyle}" x:Name="Downloads_Button" Content="    Downloads" FontSize="18" Background="Transparent" FontFamily="Bahnschrift SemiBold" BorderBrush="Transparent" Margin="0,10,103,10" Foreground="{DynamicResource ThemeSecondaryAltText}" Click="DownloadsBtn_Click" Cursor="Hand" />
                            <Image Source="/assets/icons8-download-96.png" Margin="10,18,205,19" IsHitTestVisible="False" />
                            <Popup x:Name="Downloads_Popup" PlacementTarget="{Binding ElementName=Downloads_Button}" Placement="Left" VerticalOffset="55" HorizontalOffset="135" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False" Opened="DownloadsPopup_Loaded" Closed="DownloadsPopup_Unloaded">
                                <local:DownloadsPopup x:Name="Downloads_Control" />
                            </Popup>
                            <Button x:Name="Close_Button" Style="{DynamicResource StatusBtnStyle}" Content="&#xE8BB;" FontFamily="Segoe MDL2 Assets" FontSize="12" Background="Transparent" Foreground="{DynamicResource ThemeSecondaryAltText}" BorderBrush="Transparent" Click="btnClose_Click" Width="40" Height="40" Cursor="Hand" Margin="188,9,10,10" />
                            <Button x:Name="Minimize_Button" Style="{DynamicResource StatusBtnStyle}" Content="&#xE921;" FontFamily="Segoe MDL2 Assets" FontSize="12" Background="Transparent" Foreground="{DynamicResource ThemeSecondaryAltText}" BorderBrush="Transparent" Click="btnMinimize_Click" Width="40" Height="40" Cursor="Hand" Margin="142,9,56,10" />
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
        <Rectangle x:Name="POPUP_BG" Fill="#66000000" Opacity="0" Visibility="Hidden" />
        <local:EULAPopup x:Name="EULA_Control" Width="561" Height="720" Opacity="0" Visibility="Hidden" />
        <local:InstallOptFilesPopup x:Name="OptFiles_Control" Width="561" Height="300" Opacity="0" Visibility="Hidden" />
        <local:CheckExisitngFilesPopup x:Name="CheckFiles_Control" Width="561" Height="300" Opacity="0" Visibility="Hidden" />
        <local:InstallLocation x:Name="InstallLocation_Control" Width="561" Height="300" Opacity="0" Visibility="Hidden" />
        <local:AskToQuitPopup x:Name="AskToQuit_Control" Width="561" Height="300" Opacity="0" Visibility="Hidden" />
        <local:OnBoardAskPopup x:Name="OnBoardAsk_Control" Width="561" Height="210" Opacity="0" Visibility="Hidden" />

        <Rectangle x:Name="OnBoardingRect" Fill="#BF000000" Margin="0,0,0,0" Visibility="Hidden">
            <Rectangle.OpacityMask>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing Brush="Black">
                            <GeometryDrawing.Geometry>
                                <CombinedGeometry GeometryCombineMode="Exclude">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry Rect="0,0,300,200" />
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <RectangleGeometry x:Name="OnBoardingClip" Rect="1,1,24,14" RadiusX="2" RadiusY="2" />
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.OpacityMask>
        </Rectangle>

        <local:OnBoardPopup x:Name="OnBoard_Control" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="Hidden">
            <local:OnBoardPopup.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="6" Y="64" />
                </TransformGroup>
            </local:OnBoardPopup.RenderTransform>
        </local:OnBoardPopup>
    </Grid>
</Window>