<UserControl x:Class="launcher.ServerSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:launcher"
             mc:Ignorable="d"
             d:DesignHeight="704" d:DesignWidth="935">
    <UserControl.Resources>
        <Style x:Key="RoundedThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    CornerRadius="5" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalScrollBarStyle" TargetType="ScrollBar">
            <!-- Set properties specifically for a horizontal bar -->
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="Width" Value="6" />
            <Setter Property="Background" Value="{DynamicResource ThemeSecondary}" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeSecondary}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="2" />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="1" Background="{DynamicResource ThemePrimary}" CornerRadius="6" Width="10" />

                            <Track
        x:Name="PART_Track"
        Grid.Row="1"
        Orientation="Vertical"
        IsDirectionReversed="true"
                        Width="10">
                                <Track.Thumb>
                                    <Thumb
                        Style="{StaticResource RoundedThumbStyle}"
                Background="{DynamicResource ThemeSecondary}"
                BorderBrush="{DynamicResource ThemeSecondary}"
                BorderThickness="1" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style that applies to all ScrollBars by default (optional) -->
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource VerticalScrollBarStyle}" />

        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383" />
        <Style x:Key="ToggleButtonCombo" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VisCombobox" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeComboBoxBorder}" BorderThickness="1" CornerRadius="4" BorderBrush="#54adf7" Width="495">
                                <DockPanel LastChildFill="True">
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Left"
                      Margin="5,5,0,0"
                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                    <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="493" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="440,0,0,0">
                                        <Path Data="M 0 0 L 10 10 L 20 0 Z"
              Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Visibility" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="7,4,-7,30" />

                            <Popup Name="PART_Popup"
   IsOpen="{TemplateBinding IsDropDownOpen}"
   Placement="Bottom"
   PlacementTarget="{Binding ElementName=PART_Popup}"
   AllowsTransparency="True"
   PopupAnimation="Fade"
   VerticalOffset="55">
                                <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="498">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MapCombobox" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeComboBoxBorder}" BorderThickness="1" CornerRadius="4" BorderBrush="#54adf7" Width="495">
                                <DockPanel LastChildFill="True">
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Margin="5,5,0,0"
                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                   ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                    <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="493" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
               BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="440,0,0,0">
                                        <Path Data="M 0 0 L 10 10 L 20 0 Z"
           Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Map" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="7,4,-7,30" />

                            <Popup Name="PART_Popup"
IsOpen="{TemplateBinding IsDropDownOpen}"
Placement="Bottom"
PlacementTarget="{Binding ElementName=PART_Popup}"
AllowsTransparency="True"
PopupAnimation="Fade"
VerticalOffset="55" MaxHeight="290">
                                <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="498">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlaylistCombobox" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeComboBoxBorder}" BorderThickness="1" CornerRadius="4" BorderBrush="#54adf7" Width="495">
                                <DockPanel LastChildFill="True">
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Margin="5,5,0,0"
                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                   ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                    <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="493" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
               BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="440,0,0,0">
                                        <Path Data="M 0 0 L 10 10 L 20 0 Z"
           Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Playlist" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="7,4,-7,30" />

                            <Popup Name="PART_Popup"
IsOpen="{TemplateBinding IsDropDownOpen}"
Placement="Bottom"
PlacementTarget="{Binding ElementName=PART_Popup}"
AllowsTransparency="True"
PopupAnimation="Fade"
VerticalOffset="55" MaxHeight="290">
                                <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="498">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModeCombobox" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeComboBoxBorder}" BorderThickness="1" CornerRadius="4" BorderBrush="#54adf7" Width="495">
                                <DockPanel LastChildFill="True">
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Margin="5,5,0,0"
                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                   ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                    <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="493" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
               BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="440,0,0,0">
                                        <Path Data="M 0 0 L 10 10 L 20 0 Z"
           Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Mode" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="7,4,-7,30" />

                            <Popup Name="PART_Popup"
IsOpen="{TemplateBinding IsDropDownOpen}"
Placement="Bottom"
PlacementTarget="{Binding ElementName=PART_Popup}"
AllowsTransparency="True"
PopupAnimation="Fade"
VerticalOffset="55">
                                <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="498">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeSecondaryAltText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA" />
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA" />
        <Style x:Key="ComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="4,1" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" Padding="10" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeSecondaryAltText}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FF52AAF2" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#95CCFA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#95CCFA" />
        <Style x:Key="PlaylistFileTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeSecondaryAltText}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Playlists File" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="8,4,-8,30" />
                            <TextBlock IsHitTestVisible="False" Text="" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="Bahnschrift Light" Margin="450,15,5,14" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HostNameTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeSecondaryAltText}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                            </Border>
                            <TextBlock IsHitTestVisible="False" Text="Host Name" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="Bahnschrift Light" Height="15" Margin="8,4,-8,30" />
                            <TextBlock IsHitTestVisible="False" Text="" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="Bahnschrift Light" Margin="450,15,5,14" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border Background="{DynamicResource ThemeSecondary}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="704" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" HorizontalAlignment="Left" Width="935">
                <TextBlock Text="Server / Game Settings" Foreground="{DynamicResource ThemePrimaryText}" FontSize="40" FontFamily="Bahnschrift SemiBold" VerticalAlignment="Top" Margin="43,43,0,0" Height="49" />
                <TextBlock Text="Settings related to hosting or managing game servers. These options define the server’s visibility, map, playlist, and general game modes. They’re not exclusive to server hosting but are central to multiplayer gameplay." TextWrapping="Wrap" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="Bahnschrift Light" VerticalAlignment="Top" Margin="43,97,172,0" Height="67" Width="720" />

                <TextBox x:Name="PlaylistsFile" Style="{DynamicResource PlaylistFileTextBox}" Height="49" Width="498" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="43,179,0,0" Background="Transparent" BorderBrush="{DynamicResource ThemeSecondaryAltText}" Text="" Foreground="{DynamicResource ThemePrimaryText}" FontSize="16" KeyDown="TextBox_PreviewKeyDown" Cursor="IBeam" />
                <TextBox x:Name="HostName" Style="{DynamicResource HostNameTextBox}" Height="49" Width="498" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="43,240,0,0" Background="Transparent" BorderBrush="{DynamicResource ThemeSecondaryAltText}" Text="" Foreground="{DynamicResource ThemePrimaryText}" FontSize="16" KeyDown="TextBox_PreviewKeyDown" Cursor="IBeam" />

                <ComboBox x:Name="Mode" Style="{StaticResource ModeCombobox}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" SelectedIndex="0" HorizontalAlignment="Left" Margin="43,303,0,352" ShouldPreserveUserEnteredPrefix="True" Height="49" Width="498" Foreground="{DynamicResource ThemePrimaryText}" Cursor="Hand">
                    <ComboBoxItem Content="Host" />
                    <ComboBoxItem Content="Server" />
                    <ComboBoxItem Content="Client" />
                </ComboBox>

                <ComboBox x:Name="PlaylistCmb" Style="{StaticResource PlaylistCombobox}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" SelectedIndex="0" HorizontalAlignment="Left" Margin="43,366,0,289" ShouldPreserveUserEnteredPrefix="True" Height="49" Width="498" Foreground="{DynamicResource ThemePrimaryText}" Cursor="Hand" />
                <ComboBox x:Name="MapCmb" Style="{StaticResource MapCombobox}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" SelectedIndex="0" HorizontalAlignment="Left" Margin="43,429,0,226" ShouldPreserveUserEnteredPrefix="True" Height="49" Width="498" Foreground="{DynamicResource ThemePrimaryText}" Cursor="Hand" />

                <ComboBox x:Name="VisibilityCmb" Style="{StaticResource VisCombobox}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" SelectedIndex="0" HorizontalAlignment="Left" Margin="43,495,0,160" ShouldPreserveUserEnteredPrefix="True" Height="49" Width="498" Foreground="{DynamicResource ThemePrimaryText}" Cursor="Hand">
                    <ComboBoxItem Content="Offline" />
                    <ComboBoxItem Content="Hidden" />
                    <ComboBoxItem Content="Public" />
                </ComboBox>
            </Grid>
        </Grid>
    </Border>
</UserControl>